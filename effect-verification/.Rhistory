source('~/GitHub/statistics/effect-verification/ch2.R', echo=TRUE)
source('~/GitHub/statistics/effect-verification/ch1.R', echo=TRUE)
source('~/GitHub/statistics/effect-verification/ch2.R', echo=TRUE)
source('~/GitHub/statistics/effect-verification/ch2.R', echo=TRUE)
formula_vec <- c(spend ~ treatment + recency + channel,
spend ~ treatment + recency + channel + history,
history ~ treatment + channel + recency)
names(formula_vec) <- paste("reg",LETTERS[1:3],sep="_")
models <- formula_vec %>%
enframe(name="model_index",value="formula")
df_modles <- models %>%
mutate(model=map(.x=formula, .f=lm, data=biased_data)) %>%
mutate(lm_result=map(.x=model, .f=tidy))
df_results <- df_models %>%
mutate(formula=as.character(formula)) %>%
select(formula, model_index, lm_result) %>%
unnest(cols=c(lm_result))
df_results <- df_models %>%
mutate(formula=as.character(formula)) %>%
select(formula, model_index, lm_result) %>%
unnest(cols=c(lm_result))
df_models <- models %>%
mutate(model=map(.x=formula, .f=lm, data=biased_data)) %>%
mutate(lm_result=map(.x=model, .f=tidy))
df_results <- df_models %>%
mutate(formula=as.character(formula)) %>%
select(formula, model_index, lm_result) %>%
unnest(cols=c(lm_result))
treatment_coef <- df_results %>%
filter(term == "treatment") %>%
pull(estimate)
history_coef <- df_results %>%
filter(model_index == "reg_B",
term == "history") %>%
pull(estimate)
OVB <- history_coef*treatment_coef[3]
source('~/GitHub/statistics/effect-verification/ch2.R', echo=TRUE)
coef_gap <- treatment_coef[1] -treatment_coef[2]
OVB
coef_gap
